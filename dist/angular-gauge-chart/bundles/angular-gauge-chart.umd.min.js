!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("gauge-chart")):"function"==typeof define&&define.amd?define("angular-gauge-chart",["exports","@angular/core","gauge-chart"],e):e((t=t||self)["angular-gauge-chart"]={},t.ng.core,t.gaugeChart)}(this,(function(t,e,n){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function a(t,e,n,a){var i,o=arguments.length,r=o<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,a);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(r=(o<3?i(r):o>3?i(e,n,r):i(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r}function i(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var o=function(){function t(){}return t.prototype.ngOnInit=function(){this.name&&(this.nameFont||(this.nameFont=""+Math.round(this.canvasWidth/15)),this.nameMargin=""+Math.round(+this.nameFont/4)),this.bottomLabel&&(this.bottomLabelFont||(this.bottomLabelFont=""+Math.round(this.canvasWidth/10)),this.customBottomLabelMargin?this.bottomLabelMargin=this.customBottomLabelMargin:this.bottomLabelMargin="-"+this.bottomLabelFont,this.customDisplayLabel||(this.customDisplayLabel="block")),this.optionsCheck()&&(this.element=this.gaugeArea.nativeElement,this.drawChart()),this.oldOptions=JSON.parse(JSON.stringify(this.options))},t.prototype.optionsCheck=function(){return null==this.canvasWidth?(console.warn("gauge-chart warning: canvasWidth is not specified!"),!1):null==this.canvasHeight?(console.warn("gauge-chart warning: canvasWidth is not specified!"),!1):null==this.needleValue?(console.warn("gauge-chart warning: needleValue is not specified!"),!1):(null==this.centralLabel&&(this.centralLabel=""),this.canvasHeight+=10,!0)},t.prototype.ngDoCheck=function(){this.areEqual(this.options,this.oldOptions)||(this.drawChart(!0),this.oldOptions=JSON.parse(JSON.stringify(this.options)))},t.prototype.areEqual=function(t,e){return JSON.stringify(t)===JSON.stringify(e)},t.prototype.drawChart=function(t){void 0===t&&(t=!1),t&&this.gaugeChart&&this.gaugeChart.removeGauge(),this.options.centralLabel=this.centralLabel,this.gaugeChart=n.gaugeChart(this.element,this.canvasWidth,this.options),this.gaugeChart.updateNeedle(this.needleValue)},t.prototype.ngOnChanges=function(t){t.needleValue&&!t.needleValue.firstChange&&(this.needleValue=t.needleValue.currentValue,this.gaugeChart.updateNeedle(this.needleValue)),t.centralLabel&&!t.centralLabel.firstChange&&(this.centralLabel=t.centralLabel.currentValue,this.drawChart(!0))},a([e.ViewChild("gaugeArea",{static:!0}),i("design:type",Object)],t.prototype,"gaugeArea",void 0),a([e.Input(),i("design:type",Number)],t.prototype,"canvasWidth",void 0),a([e.Input(),i("design:type",Number)],t.prototype,"canvasHeight",void 0),a([e.Input(),i("design:type",Number)],t.prototype,"needleValue",void 0),a([e.Input(),i("design:type",String)],t.prototype,"centralLabel",void 0),a([e.Input(),i("design:type",Object)],t.prototype,"options",void 0),a([e.Input(),i("design:type",Object)],t.prototype,"wrapOptions",void 0),a([e.Input(),i("design:type",String)],t.prototype,"name",void 0),a([e.Input(),i("design:type",String)],t.prototype,"nameFont",void 0),a([e.Input(),i("design:type",String)],t.prototype,"bottomLabel",void 0),a([e.Input(),i("design:type",String)],t.prototype,"customDisplayLabel",void 0),a([e.Input(),i("design:type",String)],t.prototype,"bottomLabelFont",void 0),a([e.Input(),i("design:type",String)],t.prototype,"customBottomLabelMargin",void 0),t=a([e.Component({selector:"circular-gauge-chart",template:'<div class="gauge-chart"\n     [style.width.px]="canvasWidth"\n     [style.height.px]="canvasHeight"\n>\n  <span\n    [style.font-size.px]="nameFont"\n    [style.margin-bottom.px]="nameMargin">\n    {{name}}\n  </span>\n  <div #gaugeArea></div>\n  <span\n    class="gauge-chart__label"\n    [style.display]="customDisplayLabel"\n    [style.font-size.px]="bottomLabelFont"\n    [style.margin-top.px]="bottomLabelMargin">\n    {{bottomLabel}}\n  </span>\n</div>\n',styles:["*{font-family:Roboto,'Helvetica Neue',sans-serif}.gauge-chart{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;text-align:center}.gauge-chart__label{font-weight:700}"]})],t)}(),r=function(){function t(){}return t=a([e.NgModule({imports:[],declarations:[o],exports:[o]})],t)}();t.CircularGaugeChartModule=r,t.GaugeChartComponent=o,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-gauge-chart.umd.min.js.map